buildscript {    repositories {        maven { url "http://172.16.60.188:8081/nexus/content/groups/public" }    }    ext {        springCloudVersion = 'Edgware.SR4'        springBootVersion = '1.5.9.RELEASE'    }    dependencies {        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")    }}subprojects {    apply plugin: 'java'    apply plugin: 'idea'    apply plugin: 'org.springframework.boot'    apply plugin: 'maven'    group = 'com.example'    version = '0.0.1-SNAPSHOT'    repositories {        maven { url "http://172.16.60.188:8081/nexus/content/groups/public" }    }    // 关闭JDK1.8的doclint特性    if (JavaVersion.current().isJava8Compatible()) {        allprojects {            tasks.withType(Javadoc) {                options.encoding = 'UTF-8'                options.addStringOption('Xdoclint:none', '-quiet')            }        }    }    // 导入Spring Cloud 依赖    dependencyManagement {        imports {            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"        }    }    dependencyManagement {        resolutionStrategy {            // 检查远程依赖是否存在更新            cacheChangingModulesFor 0, 'seconds'            cacheChangingModulesFor 0, 'seconds' // 修改本地缓存策略        }    }    sourceCompatibility = JavaVersion.VERSION_1_8    targetCompatibility = JavaVersion.VERSION_1_8    springBoot  {        buildInfo ()    }    bootRepackage {        // 默认只打普通jar包        enabled = false    }// 打包源代码，为了方便查看源码及调试，把源码也上传到nexus仓库中    task sourcesJar(type: Jar) {        classifier = 'sources'        from sourceSets.main.allSource    }// 打javadoc包，为了方便查看注释，需要把javadoc也上传到nexus仓库中    task javadocJar(type: Jar, dependsOn: javadoc) {        classifier = 'javadoc'        from javadoc.destinationDir    }    artifacts {        archives jar        archives sourcesJar        archives javadocJar    }    idea {        module {            downloadJavadoc = true            downloadSources = true        }    }//    uploadArchives {//        repositories {//            mavenDeployer {//                snapshotRepository(url: "http://172.16.60.188:8081/repository/maven-snapshots/") {//                    authentication(userName:'deployment', password:'123456')//                }//                repository(url: "http://172.16.60.188:8081/repository/maven-releases/") {//                    authentication(userName:'deployment', password:'123456')//                }//            }//        }//    }    dependencies {        compileOnly('org.springframework.boot:spring-boot-configuration-processor')        compileOnly('org.projectlombok:lombok')        testCompile('org.projectlombok:lombok')        testCompile "org.springframework.boot:spring-boot-starter-test"    }}//buildscript {//    ext {//        springBootVersion = '1.5.9.RELEASE'//    }//    repositories {//        maven {//            url "http://172.16.60.188:8081/nexus/content/groups/public"//        }//    }//    dependencies {//        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")//    }//}////apply plugin: 'java'//apply plugin: 'eclipse'//apply plugin: 'org.springframework.boot'//apply plugin: 'io.spring.dependency-management'//apply plugin: 'jar'//////group = 'com.example'//version = '0.0.1-SNAPSHOT'//sourceCompatibility = 1.8////repositories {//    maven {//        url "http://172.16.60.188:8081/nexus/content/groups/public"//    }//}//////dependencies {//    compile('org.projectlombok:lombok')//    compile("org.springframework.boot:spring-boot-starter-test")//    compile("org.springframework.boot:spring-boot-starter")//    compile("org.springframework.boot:spring-boot-starter-freemarker")//    compile("org.springframework.boot:spring-boot-starter-web")//    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat:1.5.2.RELEASE'//    compile("org.springframework.boot:spring-boot-starter-actuator")//    compile('io.springfox:springfox-swagger2:2.8.0')//    compile('io.springfox:springfox-swagger-ui:2.8.0')//    compile 'io.swagger:swagger-jersey2-jaxrs:1.5.8'//    compile('com.mangofactory:swagger-springmvc:1.0.2')//    compile('com.mangofactory:swagger-models:1.0.2')//    compile('com.wordnik:swagger-annotations:1.3.11')//    compile('redis.clients:jedis:2.7.2')//    compile('org.springframework.boot:spring-boot-starter-data-redis:2.0.4.RELEASE')//    compile('org.springframework.boot:spring-boot-starter-parent:1.5.8.RELEASE')//    //compile('org.springframework.boot:spring-boot-starter-data-redis:1.5.8.RELEASE')//    compile('com.alibaba:fastjson:1.2.41')//    compile('org.freemarker:freemarker')//    compile('org.springframework.boot:spring-boot-starter-cache')//    compile('org.mybatis.spring.boot:mybatis-spring-boot-starter:1.3.0')//    compile('org.apache.tomcat.embed:tomcat-embed-jasper')//    compile group: 'mysql', name: 'mysql-connector-java', version: '5.1.34'//    compile('javax.servlet:jstl')//    compileOnly "javax.servlet:javax.servlet-api"//    compile('org.springframework.boot:spring-boot-starter-mail')//    compile group: 'javax.mail', name: 'mail', version: '1.4.1'//    compile group: 'javax.interceptor', name: 'javax.interceptor-api', version: '3.1'//    compile('commons-httpclient:commons-httpclient:3.1')//    compile('log4j:log4j:1.2.17')//    compile(//            'net.sf.json-lib:json-lib:2.4:jdk15'//    )//////}