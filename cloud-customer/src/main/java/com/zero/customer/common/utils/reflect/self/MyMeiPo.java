package com.zero.customer.common.utils.reflect.self;import com.zero.customer.common.utils.reflect.other.Man;import java.lang.reflect.Method;/** * All rights Reserved, Designed By Suixingpay. * * @author: 张得钧<zhang_dj @ suixingpay.com> * @date: 2019-10-29 21:16 * @Copyright: 2019 Suixingpay. All rights reserved. * 注意：本内容仅限于随行付支付有限公司内部传阅，禁止外泄以及用于其他的商业用途。 */public class MyMeiPo implements MyInvocationHandler {    private Man target;    /**获取被代理人的个人资料     * @param target 被代理对象     * @return Object     */    Object getInstance(Man target) {        this.target = target;        Class clazz = target.getClass();        return MyProxy.newProxyInstance(new MyClassLoader(), clazz.getInterfaces(), this);    }    @Override    public Object invoke(Object proxy, Method method, String args) throws Throwable {        System.out.println("我是媒婆，按照你的要求");        System.out.println("开始进行海选...");        System.out.println("------------");        //调用的时候        method.invoke(this.target, args);        System.out.println("------------");        System.out.println("选择结束，如果合适的话，就准备办事");        return null;    }}