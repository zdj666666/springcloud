package com.zero.customer.common.mybatis;import org.aspectj.lang.annotation.Aspect;import org.aspectj.lang.annotation.Before;import org.aspectj.lang.annotation.Pointcut;import org.slf4j.Logger;import org.slf4j.LoggerFactory;import org.springframework.stereotype.Component;/** * All rights Reserved, Designed By Suixingpay. * * @author: 张得钧<zhang_dj @ suixingpay.com> * @date: 2019-11-24 14:06 * @Copyright: 2019 Suixingpay. All rights reserved. * 注意：本内容仅限于随行付支付有限公司内部传阅，禁止外泄以及用于其他的商业用途。 */@Aspect@Componentpublic class DataSourceAop {    private static final Logger LOGGER = LoggerFactory.getLogger(DataSourceAop.class);    /*@Pointcut("!@annotation(com.zero.customer.annotation.Master) && " +            "(execution(* com.zero.customer.service..*.select*(..)) || " +            "execution(* com.zero.customer.service..*.get*(..)) || " +            "execution(* com.baomidou.mybatisplus.service..*.select*(..)) || " +            "execution(* com.zero.customer.service..*.find*(..)))")    public void readPointCut(){  }*/    @Pointcut("!@annotation(com.zero.customer.annotation.Master) && " +            "(execution(* com.zero.customer.mapper.master..*.select*(..)) || " +            "execution(* com.zero.customer.mapper.master..*.get*(..)) || " +            "execution(* com.baomidou.mybatisplus.mapper..*.select*(..)) || " +            "execution(* com.zero.customer.mapper..*.find*(..)))")    public void readMasterPointCut(){  }    @Pointcut("!@annotation(com.zero.customer.annotation.Master) && " +            "(execution(* com.zero.customer.mapper.slave..*.select*(..)) || " +            "execution(* com.zero.customer.mapper.slave..*.get*(..)) || " +            "execution(* com.baomidou.mybatisplus.mapper..*.select*(..)) || " +            "execution(* com.zero.customer.mapper..*.find*(..)))")    public void readSlavePointCut(){  }    @Pointcut("@annotation(com.zero.customer.annotation.Master) || execution(* com.zero.customer.service..*.insert*(..)) " +            "|| execution(* com.zero.customer.service..*.update*(..)) || execution(* com.baomidou.mybatisplus.service..*.update*(..)) " +            "|| execution(* com.zero.customer.service..*.delete*(..)) || execution(* com.baomidou.mybatisplus.service..*.delete*(..)) " +            "|| execution(* com.baomidou.mybatisplus.service..*.insert*(..))")    public void writePointcut() {    }    @Before("readMasterPointCut()")    public void readMaster(){        LOGGER.info("------switch read-------");        DbContextHolder.slave(0);    }    @Before("readSlavePointCut()")    public void readSlave(){        LOGGER.info("------switch read-------");        DbContextHolder.slave(1);    }    @Before("writePointcut()")    public void write(){        LOGGER.info("------switch write-------");        DbContextHolder.master();    }}