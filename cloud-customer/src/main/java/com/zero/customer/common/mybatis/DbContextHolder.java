package com.zero.customer.common.mybatis;import com.zero.customer.enums.DBTypeEnum;import org.slf4j.LoggerFactory;import java.util.concurrent.atomic.AtomicInteger;import java.util.logging.Logger;/** * All rights Reserved, Designed By Suixingpay. * * @author: 张得钧<zhang_dj @ suixingpay.com> * @date: 2019-11-24 14:10 * @Copyright: 2019 Suixingpay. All rights reserved. * 注意：本内容仅限于随行付支付有限公司内部传阅，禁止外泄以及用于其他的商业用途。 */public class DbContextHolder {    private static final ThreadLocal<DBTypeEnum> CONTEXT_HOLDER = new ThreadLocal<>();    private static final AtomicInteger COUNTER = new AtomicInteger(0);    public static void set(DBTypeEnum dbType) {        CONTEXT_HOLDER.set(dbType);    }    public static DBTypeEnum get() {        return CONTEXT_HOLDER.get();    }    static void master() {        set(DBTypeEnum.MASTER);        System.out.println("切换到master");    }    static void slave(int type) {        //  轮询       /* int index = COUNTER.getAndIncrement() % 2;        if (COUNTER.get() > 9999) {            COUNTER.set(-1);        }*/        if(type == 0) {        System.out.println(type +"->切换到master");            set(DBTypeEnum.MASTER);        }else{        System.out.println(type +"->切换到slave1");            set(DBTypeEnum.SLAVE1);        }    }    /**     * 清除上下文数据     */    static void clearDbType() {        CONTEXT_HOLDER.remove();    }}